#!/usr/bin/env python3
"""
Script para limpiar migraciones problem√°ticas de la aplicaci√≥n horses
que no existe en el c√≥digo actual pero tiene migraciones en la base de datos.
"""

import os
import sys
import django
from django.db import connection
from django.core.management import execute_from_command_line

def setup_django():
    """Configura Django para usar este script"""
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'mydevsite.settings')
    django.setup()

def cleanup_horses_migrations():
    """Elimina las migraciones problem√°ticas de horses"""
    print("üîÑ Limpiando migraciones problem√°ticas de horses...")
    
    with connection.cursor() as cursor:
        try:
            # Verificar si la tabla django_migrations existe
            cursor.execute("""
                SELECT EXISTS (
                    SELECT FROM information_schema.tables 
                    WHERE table_name = 'django_migrations'
                );
            """)
            
            if not cursor.fetchone()[0]:
                print("‚ùå La tabla django_migrations no existe")
                return False
            
            # Eliminar las migraciones de horses de la tabla django_migrations
            cursor.execute("""
                DELETE FROM django_migrations 
                WHERE app = 'horses';
            """)
            
            deleted_count = cursor.rowcount
            print(f"‚úÖ Eliminadas {deleted_count} migraciones de horses")
            
            # Intentar eliminar las tablas de horses si existen
            tables_to_drop = [
                'horses_horse',
                'horses_horse_internal_id_c019ac91_uniq',  # La constraint problem√°tica
            ]
            
            for table in tables_to_drop:
                try:
                    # Verificar si la tabla existe
                    cursor.execute(f"""
                        SELECT EXISTS (
                            SELECT FROM information_schema.tables 
                            WHERE table_name = '{table}'
                        );
                    """)
                    
                    if cursor.fetchone()[0]:
                        cursor.execute(f"DROP TABLE IF EXISTS {table} CASCADE;")
                        print(f"‚úÖ Tabla {table} eliminada")
                    else:
                        print(f"‚ÑπÔ∏è  Tabla {table} no existe")
                        
                except Exception as e:
                    print(f"‚ö†Ô∏è  No se pudo eliminar {table}: {e}")
            
            # Intentar eliminar constraints que puedan estar sueltas
            try:
                cursor.execute("""
                    DROP INDEX IF EXISTS horses_horse_internal_id_c019ac91_uniq;
                """)
                print("‚úÖ Constraint horses_horse_internal_id_c019ac91_uniq eliminada")
            except Exception as e:
                print(f"‚ÑπÔ∏è  Constraint ya no existe: {e}")
            
            return True
            
        except Exception as e:
            print(f"‚ùå Error al limpiar migraciones: {e}")
            return False

def main():
    """Funci√≥n principal"""
    print("üöÄ Iniciando limpieza de migraciones problem√°ticas...")
    
    setup_django()
    
    if cleanup_horses_migrations():
        print("‚úÖ Limpieza completada exitosamente")
        print("üîÑ Ahora ejecuta: python manage.py migrate")
    else:
        print("‚ùå Error en la limpieza")
        return 1
    
    return 0

if __name__ == "__main__":
    sys.exit(main())
